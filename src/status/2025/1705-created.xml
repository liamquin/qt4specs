<item>
   <title>Issue #1705 created</title>
   <pubDate>2025-01-16T15:53:51Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1705</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1705</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:divide-decimals, fn:round: large precision values&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We may need to specify what is going to happen if very large (positive and negative) precisions are specified:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;divide-decimals(1, 1, 0x7FFFFFFF)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple implementation in Java to compute the quotient for this function returns an Overflow exception:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;BigDecimal.ONE.divide(BigDecimal.ONE, 0x7FFFFFFF, RoundingMode.DOWN)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also affects &lt;code&gt;fn:round&lt;/code&gt;: The query &lt;code&gt;round(1, -0x80000000)&lt;/code&gt; seems to behave unexpectedly in existing implementations.&lt;/p&gt;
&lt;p&gt;In general, the computation gets very slow for large precision values, and it may not be simple to interrupt such low-level operations, so maybe (if it makes sense, I havenâ€™t really thought about it) we could define precision limits.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
