<item>
   <title>Issue #1661 created</title>
   <pubDate>2024-12-18T10:17:30Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1661</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1661</guid>
   <description>&lt;div&gt;&lt;p&gt;QName arguments: also allow strings&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In #747, a syntax for QName literals was proposed (&lt;code&gt;Q"prefix:local"&lt;/code&gt;). Concerns were raised that the new syntax could be mixed up with the existing &lt;code&gt;Q{URI}local&lt;/code&gt; syntax, and that too many syntax variants are confusing.&lt;/p&gt;
&lt;p&gt;In attribute and element constructors, it is already possible to supply &lt;code&gt;prefix:local-name&lt;/code&gt; and &lt;code&gt;Q{uri}local&lt;/code&gt; strings for names:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;element { 'xml:name' } {},
element { 'Q{uri}name' } {}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With option declarations, it is possible to write:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare option output:cdata-section-elements 'xml';
&amp;lt;xml&amp;gt;text&amp;lt;/xml&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;â€¦and it is counterintuitive that &lt;code&gt;serialize($xml, { 'cdata-section-elements': 'xml' })&lt;/code&gt; is not legal.&lt;/p&gt;
&lt;p&gt;I wonder whether we cannot simply allow both QNames and strings for arguments (and arguments in options) in the existing standard functions. There are fewer cases than I had suspected:&lt;/p&gt;
&lt;p&gt;Function | Argument
--- | ---
&lt;code&gt;fn:error&lt;/code&gt; | &lt;code&gt;$code&lt;/code&gt;
&lt;code&gt;fn:format-number&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;format-name&lt;/code&gt; (can also be &lt;code&gt;xs:NCName&lt;/code&gt;)
&lt;code&gt;fn:deep-equal&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;unordered-elements&lt;/code&gt;
&lt;code&gt;fn:serialize&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;cdata-section-elements&lt;/code&gt;, &lt;code&gt;suppress-indentation&lt;/code&gt;
&lt;code&gt;fn:function-lookup&lt;/code&gt; | &lt;code&gt;$name&lt;/code&gt;
&lt;code&gt;fn:load-xquery-module&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;variables&lt;/code&gt;, &lt;code&gt;vendor-options&lt;/code&gt;
&lt;code&gt;fn:transform&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;initial-function&lt;/code&gt;, &lt;code&gt;initial-mode&lt;/code&gt;, &lt;code&gt;initial-template&lt;/code&gt;, ...
&lt;code&gt;fn:elements-to-maps&lt;/code&gt; | &lt;code&gt;$options&lt;/code&gt;: &lt;code&gt;layouts&lt;/code&gt;
&lt;code&gt;fn:schema-type&lt;/code&gt; | &lt;code&gt;$name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For some options, like the &lt;code&gt;method&lt;/code&gt; option of &lt;code&gt;fn:serialize&lt;/code&gt;, we already allow both strings and QNames.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
