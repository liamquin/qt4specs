<item>
   <title>Issue #1750 created</title>
   <pubDate>2025-02-01T00:44:37Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1750</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1750</guid>
   <description>&lt;div&gt;&lt;p&gt;EXPath Binary : copy-edits and minor enhancements&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Suggested minor enhancements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow underscores and whitespace in strings of binary, octal, or hex digits supplied as strings.&lt;/li&gt;
&lt;li&gt;Use type &lt;code&gt;xs:unsignedByte&lt;/code&gt; rather than xs:integer for octet values&lt;/li&gt;
&lt;li&gt;Use an enum type for params like "little-endian".&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following are some suggested copy-edits:&lt;/p&gt;
&lt;p&gt;Abstract para 4 - link to XQuery 4.1. The last sentence of the para ("The signatures and summaries of functions defined in this document...") makes no sense.&lt;/p&gt;
&lt;p&gt;1.1 para 1, twice, ".)" should be ").".&lt;/p&gt;
&lt;p&gt;1.2 Mention that the coercion rules in 4.0 mean that wherever a function accepts xs:base64Binary, it also accepts xs:hexBinary (but we've changed the signature to allow either, anyway).&lt;/p&gt;
&lt;p&gt;para 2. " if the result return"?&lt;/p&gt;
&lt;p&gt;The Note is ineleganty worded.&lt;/p&gt;
&lt;p&gt;1.3 I guess we should integrate the test suite into QT4.&lt;/p&gt;
&lt;p&gt;1.5 para 2 "In accordance with current practice" eh?&lt;/p&gt;
&lt;p&gt;2.1 Example would benefit from reformatting.&lt;/p&gt;
&lt;p&gt;2.2 Example, similarly. Could use underscores in the long integers. "and the examples from above reverse"??&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;"fn:fn:binary-resource" does not yet exist and is triple-barrelled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid "apologetic quotes" in 'constants'. And elsewhere. If it doesn't work as plain English without quotes, then it needs to be a defined term.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.1 and throughout, in Examples, use the F&amp;amp;O rendition rather than the right arrow. Also, add these functions to the example checking mechanism.&lt;/p&gt;
&lt;p&gt;4.1 Notes, be more precise than "similarly". Define formal equivalent. Non-editorial enhancement: allow underscores in the string.&lt;/p&gt;
&lt;p&gt;4.2 There must be a more elegant way of saying "(8-wise) (ASCII) binary digits ([01])". Allow underscores.&lt;/p&gt;
&lt;p&gt;4.2 "a xs:base64Binary with no embedded data" - use the term "zero-length".&lt;/p&gt;
&lt;p&gt;4.3 similarly. Allow underscores.&lt;/p&gt;
&lt;p&gt;Function properties: I think all these functions are pure functions so it's a waste of space to say this explicitly for each function.&lt;/p&gt;
&lt;p&gt;4.4, 4.5 Use &lt;code&gt;xs:unsignedByte&lt;/code&gt; to represent octets now that we have implicit downcasting. (Changes error code [[bin:octet-out-of-range]to XPTY0004).&lt;/p&gt;
&lt;p&gt;5.6 "blank octets"?&lt;/p&gt;
&lt;p&gt;7.1.2 "or assumed to be represented"&lt;/p&gt;
&lt;p&gt;7.1.3 "Care should be taken" - what does this mean?&lt;/p&gt;
&lt;p&gt;"Positive and negative infinities are supported" - who or what is doing the supporting?&lt;/p&gt;
&lt;p&gt;Use underscore rather than space as separators between digits.&lt;/p&gt;
&lt;p&gt;'quiet' NaN - avoid apologetic quotes.&lt;/p&gt;
&lt;p&gt;7.4 - I find the note regarding signed/unsigned integers very confusing.&lt;/p&gt;
&lt;p&gt;8.1: "bitwise or" - avoid apologetic quotes. For these three functions we should say what they do rather than assuming the reader will guess from the names. bin:shift could do with more precision. Perhaps the functions could be explained more formally by a mapping from a binary value to a sequence of booleans, then for example bin:and becomes something like for-each-pair(op:from-bits($a), op:from-bits($b), op('and') ) =&amp;gt; op:to-bits().&lt;/p&gt;
&lt;p&gt;8.5: avoid the notation &lt;code&gt;|$by|&lt;/code&gt; for absolute value. Not all of us remember our schooldays. (And when I was at school, &lt;code&gt;by&lt;/code&gt; meant &lt;code&gt;b Ã— y&lt;/code&gt;, and $ meant dollars.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
