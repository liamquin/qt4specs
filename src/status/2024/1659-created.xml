<item>
   <title>Issue #1659 created</title>
   <pubDate>2024-12-17T16:59:16Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1659</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1659</guid>
   <description>&lt;div&gt;&lt;p&gt;List-valued options represented as arrays&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The specification of the of the &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#option-parameter-conventions"&gt;option parameter conventions&lt;/a&gt; contains this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In cases where an option is list-valued, by convention the function should accept either a sequence or an array: but this rule applies only if the specification of the option explicitly accepts either. Accepting a sequence is convenient if the value is generated programmatically using an XPath expression; while accepting an array allows the options to be held in an external file in JSON format, to be read using a call on the fn:json-doc function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In particular, it says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...this rule applies only if the specification of the option explicitly accepts either...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However I could not find any option that explicitly makes use of "accepts either" in the specification. In the tests, I found two cases where arrays are passed as option values: &lt;a href="https://github.com/qt4cg/qt4tests/blob/8be46fb7e7e22164dd9005d9c53e7d2f585bbb90/fn/format-number.xml#L3757-L3770"&gt;&lt;code&gt;numberformat-510&lt;/code&gt;&lt;/a&gt; (here the option isn't even list-valued), and &lt;a href="https://github.com/qt4cg/qt4tests/blob/master/fn/serialize.xml#L1332-L1349"&gt;&lt;code&gt;serialize-xml-106a&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am wondering whether the above paragraph might be superfluous. The text preceding it says that option values are coerced to the required type, and that implies converting an array to its member sequence, doesn't it?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
