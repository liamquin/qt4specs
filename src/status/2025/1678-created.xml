<item>
   <title>Issue #1678 created</title>
   <pubDate>2025-01-05T00:24:02Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1678</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1678</guid>
   <description>&lt;div&gt;&lt;p&gt;Semantics of element(N, T) where T is a union type&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The semantics of &lt;code&gt;element(N, T)&lt;/code&gt; say that to get a match, the type annotation A of the element must be derived from T &lt;em&gt;by restriction&lt;/em&gt;. This means you will never get a match if T is a union type.&lt;/p&gt;
&lt;p&gt;Furthermore, if T is a complex type, there is no match if the type annotation is a complex type derived by extension from T.&lt;/p&gt;
&lt;p&gt;I think this is a simple error in the spec. It should say that derived-from(A, T) must be true. The derived-from() relationship handles union types and derivation by extension correctly.&lt;/p&gt;
&lt;p&gt;We do use &lt;code&gt;derived-from&lt;/code&gt; when specifying subtyping. This means that an element E can be an instance of &lt;code&gt;element(E, xs:integer)&lt;/code&gt;, and not be an instance of &lt;code&gt;element(E, xs:numeric)&lt;/code&gt;, even though  &lt;code&gt;element(E, xs:integer)&lt;/code&gt;, is a subtype of &lt;code&gt;element(E, xs:numeric)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The error seems to have crept in when the rules were redrafted for 4.0. Up to and including 3.1, the semantics of ElementTest and AttributeTest reference the derived-from() function.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
