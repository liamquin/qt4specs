<item>
   <title>Issue #1698 created</title>
   <pubDate>2025-01-13T13:53:53Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1698</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1698</guid>
   <description>&lt;div&gt;&lt;p&gt;Allow select attribute for xsl:call-template instruction&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The lack of the following feature is something that bothers me from time to time. I hope this is the right place here for my proposal.
And even though I did some search -- I am not sure if something similar was discussed before ...&lt;/p&gt;
&lt;p&gt;I propose to allow a &lt;code&gt;select&lt;/code&gt; attribute for &lt;code&gt;xsl:call-template&lt;/code&gt; instructions. When the &lt;code&gt;select&lt;/code&gt; attribute is set, then the named template is called for each selected item as context item.&lt;/p&gt;
&lt;p&gt;When the empty sequence is selected, the template is not invoked.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;select&lt;/code&gt; attribute is omitted, then the instruction works as before (Invoked once and &lt;em&gt;"[...] does not change focus [...]"&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;For extension instructions from named templates: May work the same with a prefixed attribute (e.g. &lt;code&gt;xsl:select&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Benefits I see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change the context without &lt;code&gt;xsl:apply-templates&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Avoid template parameter with &lt;code&gt;current()&lt;/code&gt; as default value (annoying when you have nested named template calls)&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;xsl:for-each&lt;/code&gt; workaround where context just must be adjusted for a single item (no such parameter available, see before)&lt;/li&gt;
&lt;li&gt;Save an &lt;code&gt;xsl:for-each&lt;/code&gt; instruction with this shorter form&lt;/li&gt;
&lt;li&gt;Harmonize &lt;code&gt;xsl:call-template&lt;/code&gt; with &lt;code&gt;xsl:apply-templates&lt;/code&gt; concept a little bit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;xsl:template match="elem"&amp;gt;
  &amp;lt;xsl:call-template name="t:make-something" select="child-elem"/&amp;gt;
  &amp;lt;!-- ... or as extension instruction: --&amp;gt;
  &amp;lt;t:make-something xsl:select="child-elem"/&amp;gt;
&amp;lt;/xsl:template&amp;gt;

&amp;lt;xsl:template name="t:make-something"&amp;gt;
  &amp;lt;xsl:context-item use="required" as="element(child-elem)"&amp;gt;
  &amp;lt;!-- ... --&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The call of &lt;code&gt;t:make-something&lt;/code&gt; before is equivalent with:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;xsl:template match="elem"&amp;gt;
  &amp;lt;xsl:for-each select="child-elem"&amp;gt;
    &amp;lt;xsl:call-template name="t:make-something"/&amp;gt;
  &amp;lt;/xsl:for-each&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
