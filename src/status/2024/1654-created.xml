<item>
   <title>Issue #1654 created</title>
   <pubDate>2024-12-11T19:48:13Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1654</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1654</guid>
   <description>&lt;div&gt;&lt;p&gt;Type annotations on maps and arrays&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Currently maps and arrays have very little type safety. You can say that your function expects array(xs:string), but that involves testing what the array actually contains, and there's nothing to stop you then appending an integer to the array.&lt;/p&gt;
&lt;p&gt;I would like to explore the possibility of having arrays and maps annotated with a type (either always, or optionally), and for this type to constrain operations such as array:append() and map:put().&lt;/p&gt;
&lt;p&gt;@dnovatchev has suggested that ordered maps and unordered maps should be different types, and I think it would be difficult to do that unless we move to structural typing. It's also more consistent with typing of atomic values and nodes - though it raises a question about sequences, where the type is purely descriptive.&lt;/p&gt;
&lt;p&gt;This would also have implications for records: presumably a map could be annotated with a record type, and this too could constrain the operations available on the value.&lt;/p&gt;
&lt;p&gt;This is a rather big change and I put it forward fairly tentatively, but I'm interested to hear people's views.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
