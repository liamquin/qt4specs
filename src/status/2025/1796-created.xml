<item>
   <title>Issue #1796 created</title>
   <pubDate>2025-02-12T14:46:44Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1796</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1796</guid>
   <description>&lt;div&gt;&lt;p&gt;Allow fn:invisible-xml to return a function that returns an item()&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Our current &lt;code&gt;fn:invisible-xml&lt;/code&gt; function returns a document node. That makes perfect sense when held up against the Invisible XML specification. But I wonder if we should leave the door open to some extensibility. I can imagine, for example, an implementation of an Invisible XML processor that has the ability to return a map or even a CSV structure instead of XML. (XML is the required, standard result in 1.0 but implementors have been known to offer user options to produce other serializations and one area of potential change in the future is other serialization formats.)&lt;/p&gt;
&lt;p&gt;Pro: more extensible. Con: less type information about the result.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
