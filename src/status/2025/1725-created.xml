<item>
   <title>Issue #1725 created</title>
   <pubDate>2025-01-23T11:20:38Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1725</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1725</guid>
   <description>&lt;div&gt;&lt;p&gt;Position of duplicates in ordered maps&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;It became clear to me when writing test cases that the specs aren't entirely clear about what happens when building a map from an input sequence that contains duplicate keys. It says clearly what entry should be created for the duplicated key, but it doesn't say clearly where this entry should appear in the result.&lt;/p&gt;
&lt;p&gt;There are four functions/instructions that this applies to: map:merge, map:build, map:of-pairs, and xsl:map.&lt;/p&gt;
&lt;p&gt;I propose that in each case, the position of the entry for the duplicated key in the resulting map should correspond to the position of the first occurrence of that key in the input sequence. That is, "order of first appearance": the effect should be the same as if new entries are always created using a map:put() operation.&lt;/p&gt;
&lt;p&gt;This might be slightly unexpected in the case of &lt;code&gt;map:merge()&lt;/code&gt; with the option &lt;code&gt;duplicates=use-last&lt;/code&gt;. It means the value will be that of the last duplicate, but its position will be that of the first duplicate. However, the other three functions/instructions achieve the effect of use-last with the callback &lt;code&gt;on-duplicates=fn{$a, $b){$a}&lt;/code&gt; which only controls the value of the entry, and cannot be used to control its position, and I think it makes sense for &lt;code&gt;map:merge&lt;/code&gt; with &lt;code&gt;duplicates=use-last&lt;/code&gt; to behave in the same way.&lt;/p&gt;
&lt;p&gt;Of course we could introduce a separate option to control the position of the combined entry, but I think that would be overkill. &lt;code&gt;xsl:for-each-group&lt;/code&gt; and &lt;code&gt;distinct-values&lt;/code&gt; both use the "order of first appearance" rule and this has never caused any problems. (&lt;code&gt;group-by&lt;/code&gt; in XQuery delivers groups in implementation-dependent order, however).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
