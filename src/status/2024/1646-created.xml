<item>
   <title>Issue #1646 created</title>
   <pubDate>2024-12-06T22:49:38Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1646</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1646</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:elements-to-maps: Robustness&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Copied from https://github.com/qt4cg/qtspecs/issues/1592#issuecomment-2493187896 and https://github.com/qt4cg/qtspecs/issues/1592#issuecomment-2495502890:&lt;/p&gt;
&lt;p&gt;[USER2] More user feeback:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s confusing that the following function calls lead to completely different outputs:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;elements-to-maps(
  &amp;lt;person&amp;gt;
    &amp;lt;name&amp;gt;Akila&amp;lt;/name&amp;gt;
    &amp;lt;age&amp;gt;34&amp;lt;/age&amp;gt;
  &amp;lt;/person&amp;gt;
)

{"person":{"name":"Akila","age":"34"}}

elements-to-maps(
  &amp;lt;person&amp;gt;
    &amp;lt;name&amp;gt;Akila&amp;lt;/name&amp;gt;
    &amp;lt;name&amp;gt;Jaha&amp;lt;/name&amp;gt;
    &amp;lt;age&amp;gt;34&amp;lt;/age&amp;gt;
  &amp;lt;/person&amp;gt;
)

{"person":[{"name":"Akila"},{"name":"Jaha"},{"age":"34"}]}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr/&gt;
&lt;p&gt;The initial feedback I gathered so far is that the function works fine if the input is regular and uniform, but as soon as there are slight deviations, it can get wild. Here are some plain examples how a small change to the input results in fairly different output:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;&amp;lt;xml&amp;gt;
  &amp;lt;info&amp;gt;X&amp;lt;/info&amp;gt;
  &amp;lt;address&amp;gt;A&amp;lt;/address&amp;gt;&amp;lt;address&amp;gt;B&amp;lt;/address&amp;gt;
&amp;lt;/xml&amp;gt;
→ { "xml": ["A", "B"] }

&amp;lt;xml&amp;gt;
  &amp;lt;info&amp;gt;X&amp;lt;/info&amp;gt;
  &amp;lt;address&amp;gt;A&amp;lt;/address&amp;gt;
  &amp;lt;address&amp;gt;B&amp;lt;/address&amp;gt;
&amp;lt;/xml&amp;gt;
→ { "xml": [{ "info": "X" }, { "address": "A" }, { "address": "B" }] }

&amp;lt;xml id='id0'&amp;gt;
  &amp;lt;address&amp;gt;A&amp;lt;/address&amp;gt;
  &amp;lt;address&amp;gt;B&amp;lt;/address&amp;gt;
&amp;lt;/xml&amp;gt;
→ { "xml": { "@id": "id0", "address": ["A", "B"] } }
&lt;/code&gt;&lt;/pre&gt;
&lt;hr/&gt;
&lt;p&gt;Possible solutions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable &lt;code&gt;uniform&lt;/code&gt; by default (performance considerations should not outweigh usability concerns)&lt;/li&gt;
&lt;li&gt;Change the rules for &lt;code&gt;record&lt;/code&gt; from &lt;code&gt;all-different(*!node-name())&lt;/code&gt; to &lt;code&gt;not(all-equal(*!node-name()))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Editorial changes: Stress in the introduction that robustness is a secondary requirement.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
